//---------------------------------------------------------------------------------
// File Name: zcta007.h
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#ifndef lOlOOlOlOO
#define lOlOOlOlOO
#ifndef llOllllOll
#include "../Common/zcta015.h"
#endif //
na\
me\
space
TA
{
class
TACO\
MMON_CLAS\
S
lOOOOOOlOOl\

{
pub\
l\
ic
:
virtual
~
lO\
OOO\
OOl\
OOl\

(
)
{
}
virtua\
l
bool
lOO\
O\
llOOOO
(
)
=
0
;
virtual
bool
ll\
l\
Ol\
OOlOl
(
)
=
0
;
vir\
tual
void\

lO\
l\
OOl\
lO\
lO
(
void
*
lOO\
lllO\
OO\
O
,
int
lOOl\
l\
l\
Ol\
lO\

)
=
0
;
priva\
t\
e
:
}
;
cla\
ss
TACOMMON_CLA\
SS
lOOO\
OOO\
lOlO
:
pu\
blic\

lO\
OOOOOlOOl\

{
pu\
blic
:
bool
lO\
OO\
llOO\
OO
(
)
{
return
false
;
}
boo\
l
lllOl\
OOl\
Ol
(
)
{
ret\
u\
rn
true
;
}
vir\
tu\
al
void
lOlOOllOlO
(
void
*
lO\
O\
lllO\
OO\
O
,
in\
t\

lOOlll\
OllO
)
=
0
;
virtual
void
lOOOOOO\
l\
O\
l\
l
(
const
void
*
lOO\
lllO\
O\
OO
,
int
lOO\
l\
ll\
Ol\
l\
O\

)
{
lOl\
O\
OllOlO\

(
(
vo\
id
*
)
lOOll\
lOOOO
,
lO\
O\
lllO\
llO
)
;
}
pr\
iva\
t\
e
:
}
;
cl\
ass\

TA\
COMM\
O\
N_CLASS
llllllll\
ll
:
pu\
b\
l\
i\
c
lO\
OOO\
O\
OlO\
lO
{
public
:
ll\
ll\
llllll\

(
)
;
~
ll\
l\
ll\
lllll
(
)
;
bool
Initia\
lis\
e
(
const
Char
*
lll\
OOO\
lOOl
)
;
voi\
d
Fina\
lise
(
)
;
vo\
id
lOlOOl\
l\
OlO
(
void\

*
lOOll\
lO\
OOO\

,
int
lOOlllOll\
O
)
;
priv\
ate
:
uSi\
ze
lOOOOOOOOO\
O
;
ll\
Ol\
llll\
OO\

lOOOOOOOO\
Ol
;
}
;
class\

TAC\
OM\
MON_CL\
ASS
lOO\
OO\
OO\
OOl\
l
:
pub\
lic
lOOO\
OOOlOlO\

{
public\

:
lOOOOOO\
O\
Ol\
l
(
)
;
~
lO\
OO\
OOOOOll
(
)
;
void
In\
i\
ti\
a\
li\
s\
e
(
void
*
lO\
Ol\
llOOOO
,
int
lOOlll\
Ol\
l\
O
)
;
vo\
i\
d
Finali\
se
(
)
;
voi\
d
lOlOO\
llOlO
(
void
*
lOOlllO\
OO\
O\

,
int\

lOOll\
lOl\
lO
)
;
bool\

lO\
OO\
OOOllO\
O
(
)
const
{
re\
tu\
rn
lOOOO\
O\
OOlOl
>
lOlOOOlOOl\

;
}
private
:
u8
*
lOOOOO\
OOlO\
O\

;
in\
t
lOOOOOO\
Ol\
Ol
;
in\
t\

lOlO\
OOlOO\
l
;
}
;
class\

TAC\
OMMON\
_CLASS\

lOlOO\
lOlll
:
pub\
li\
c\

lO\
O\
OO\
OOlOOl
{
publi\
c
:
bo\
ol
lOOOllOOOO
(
)
{
return\

true
;
}
bool
lllOlOO\
lOl
(
)
{
return
false
;
}
vi\
r\
tual
int
lOlO\
OllOOl
(
)
=
0
;
virtua\
l
in\
t
lOOOlll\
OOl
(
)
=
0
;
pr\
iv\
ate
:
}
;
cl\
ass
TACOMMON_\
CLASS
lOOO\
OOO\
OllO
:
pub\
lic
lO\
lOO\
lOlll\

{
public
:
lOOOO\
OOOllO
(
)
;
~
lOOOOO\
OOllO
(
)
;
boo\
l
In\
i\
tialise
(
co\
nst
Char
*
lllOOOlOOl
)
;
void
Finalise
(
)
;
void
lOl\
OOllOl\
O
(
void
*
lOOlllO\
O\
O\
O
,
int\

lOOll\
lOllO
)
;
int
lOlO\
OllOOl
(
)
;
int\

lO\
OOlll\
OOl\

(
)
;
pri\
vate\

:
uSize
lOOOOOO\
OOO\
O
;
ll\
O\
lll\
llO\
O\

lOOO\
OOOO\
OOl
;
}
;
cl\
a\
ss
TACO\
M\
MON_CLASS
lOOOOOO\
O\
l\
ll\

:
public
lOlOOl\
Olll
{
publ\
ic
:
lOOOOOOOl\
l\
l
(
)
;
~
lOOO\
OOOOlll
(
)
;
void\

In\
it\
ialis\
e
(
void
*
lO\
Ol\
llO\
OOO
,
in\
t
lOOl\
l\
l\
OllO
)
;
vo\
id
Fi\
n\
al\
ise\

(
)
;
void
lOlO\
Ol\
lOlO
(
vo\
id
*
lOO\
ll\
lOO\
OO
,
int
lOOlll\
Ol\
lO
)
;
int
lOlOOll\
OO\
l
(
)
{
return
lOOOO\
OOO\
lOl
;
}
int
lOOOll\
l\
O\
Ol
(
)
{
retur\
n
lO\
lOOOlO\
O\
l\

;
}
bool\

lOOOOOO\
llOO
(
)
cons\
t
{
return
lOOOOO\
O\
OlOl\

>
lOlOOO\
l\
OOl\

;
}
private
:
u8\

*
lO\
O\
O\
OOOO\
lOO
;
in\
t\

lOO\
OO\
OOO\
lOl
;
in\
t
lOlOO\
OlO\
Ol\

;
}
;
class
TACOMM\
ON_CLASS\

lOOOOOOl\
OOO
:
public\

lOOOO\
OOlOlO
{
public
:
lO\
O\
OOOOlOOO
(
)
;
~
lOOO\
OOOl\
OO\
O
(
)
;
void
Initial\
ise
(
)
;
vo\
i\
d
Fi\
nalis\
e
(
)
;
void
lOl\
OOl\
lO\
lO
(
void
*
lO\
O\
lll\
OO\
OO
,
in\
t
lOOl\
llOll\
O
)
;
in\
t
lO\
OOlllO\
O\
l\

(
)
const
{
re\
turn
lOlO\
O\
O\
lOOl\

;
}
private
:
int\

lO\
l\
OO\
OlO\
Ol
;
}
;
}
;
#endif //
