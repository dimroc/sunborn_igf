//---------------------------------------------------------------------------------
// File Name: zcta015.cpp
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#ifndef lOOlOOlllOl
#include "../Common/zcta010.h"
#endif //
#ifdef lOOlOOllllO
namespa\
c\
e
TA
{
lOOlOOl\
llll
(
lOOlOlOOOO\
O
)
lOO\
lO\
lOOOOO
::
lO\
OlO\
lOOO\
O\
l
::
lOO\
lO\
lOOOOl\

(
cons\
t
char
*
lllOl\
OOOOl
)
:
lOOOOOOOOOl
(
lllO\
l\
OOO\
Ol
)
{
Cl\
ea\
r\

(
)
;
lO\
OlO\
l\
OO\
OOO
::
Cr\
eat\
eIns\
tance\

(
)
;
lOOl\
OlOOOOO
::
Ge\
t\
Ins\
ta\
nce
(
)
.
lO\
OlOl\
OOOlO
(
this\

)
;
lO\
O\
lOl\
OOO\
ll
=
0
;
}
lOOlO\
lOOOOO
::
lOOlOlO\
OOOl
::
~
lOOlO\
lO\
OOOl
(
)
{
if
(
lOOlO\
l\
OO\
OOO\

::
lOOlO\
l\
OOlOO
(
)
)
lOOl\
OlOOOOO
::
lOOl\
OlOOlOO
(
)
->
lO\
OlOlOOl\
O\
l
(
this
)
;
}
void\

lO\
OlOl\
OOO\
O\
O
::
lOOl\
OlOOO\
O\
l
::
Clea\
r
(
)
{
lOOl\
OlO\
OllO\

=
0
;
lOOlO\
lO\
Oll\
l
=
0
;
lOO\
lOlOlOOO
=
0
;
lOO\
l\
Ol\
Ol\
OOl
=
0
;
}
voi\
d\

lOOlO\
lO\
OOOO
::
lOOlOl\
OOOOl\

::
Rese\
t
(
)
{
lO\
Ol\
OlOOOl\
l
=
(
(
lOO\
lOlOO\
O\
ll
*
(
s6\
4
)
230
)
+
(
lOOl\
OlOOl\
l\
O
*
(
s64
)
26
)
)
>>
8
;
Clear\

(
)
;
}
void
lO\
OlOlOOOOO\

::
Rese\
t
(
)
{
It\
erat\
or
lOlOOlOOlO\

=
lO\
OlOl\
Ol\
OlO
.
lOlO\
OOOlO\
O\

(
)
;
for\

(
;
!
lO\
lO\
Ol\
OOlO
.
AtEnd
(
)
;
++
lOlOOlOOlO
)
{
lO\
OlOlOOOOO
::
lOOl\
OlOOO\
Ol
&
lOOlO\
l\
O\
lOll
=
*
*
lOl\
OOlO\
Ol\
O\

;
lOOl\
OlOlOll\

.
Reset
(
)
;
}
}
void\

lOOlO\
lOOO\
OO
::
lO\
O\
lOl\
OOOl\
O
(
lOOlOlOOOO\
l
*
lOOl\
O\
lOllOO
)
{
lOOlOlOlOlO
.
lOOO\
lllOOO
(
lOOl\
Ol\
OllOO
)
;
}
void\

lOOl\
OlOOOOO
::
lOOlO\
l\
OOlOl
(
lOO\
lOlOO\
OOl\

*
lOOl\
O\
lOllOO
)
{
lOOlOlO\
lOlO\

.
lO\
OO\
OOlOOl\
l
(
lOOlOlOllOO
)
;
}
lOOlOlO\
O\
OOO
::
lOOlO\
lOO\
OOO
(
)
{
}
lOOlOl\
OOOOO
::
~
lOOlOlOOOO\
O
(
)
{
Finalise\

(
)
;
}
void
lO\
O\
lOlOO\
O\
OO
::
Initia\
lise
(
)
{
lOOlOlOllOl
::
CreateInstance\

(
)
;
TA\
_\
ASSERT\

(
lOO\
lOlOlOlO
.
lOOOlllOO\
l
(
)
==
0
)
;
}
voi\
d
lOOl\
OlOOO\
OO\

::
Fin\
alise\

(
)
{
lO\
Ol\
Ol\
OlOl\
O
.
Clear\

(
)
;
}
}
#endif //
