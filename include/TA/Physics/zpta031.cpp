//---------------------------------------------------------------------------------
// File Name: zpta031.cpp
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#define TA_PHYSICS_INTERNAL
#include "StaticObject.h"
#ifndef TA_PHYSICS_H
#include "Physics.h"
#endif //
#ifndef TA_COLLISIONOBJECTCOMPLEX_H
#include "CollisionObjectComplex.h"
#endif //
#ifndef TA_DYNAMICOBJECT_H
#include "DynamicObject.h"
#endif //
na\
me\
spa\
ce
TA
{
voi\
d\

Sta\
ticObject
::
Initia\
li\
se
(
Collisio\
n\
Ob\
je\
ctCom\
plex
*
lOOl\
l\
OOlO\
lOl\

)
{
if
(
lOlOllO\
lll\
lO
)
{
lOOOlllOl\
O\

(
0
,
"StaticObject::Initialise. Already Initialised")
;
Finalise\

(
)
;
}
lOlO\
llOllllO
=
Dy\
n\
a\
m\
i\
c\
O\
bj\
ect
::
Creat\
eN\
ew
(
)
;
lOl\
OllOllllO
->
Initia\
l\
ise
(
lOOllOOlOlOl
)
;
}
voi\
d\

Static\
O\
b\
ject
::
Fina\
l\
ise
(
)
{
if\

(
lOlOllOlll\
lO
)
{
lOlOllO\
lll\
l\
O
->
Rel\
e\
ase
(
)
;
lO\
lO\
llOll\
ll\
O
=
0
;
}
}
void
StaticObje\
c\
t
::
Se\
tFra\
me\

(
cons\
t
MFrame
&
lOllO\
lll\
lOO\

)
{
lOl\
Ol\
l\
O\
l\
lllO
->
Set\
Frame
(
lOllOllllO\
O\

)
;
}
void
StaticObj\
ect
::
SetNex\
tFra\
me
(
const
MFram\
e
&
lllOOOlOlO\
lO
)
{
lOOOOOOllO
(
lOlOll\
OllllO
,
"StaticObject::SetNextFrame: StaticObject is uninitialised.")
;
if\

(
lllOOOlOl\
OlO
==
lOlOl\
lOll\
ll\
O
->
Ge\
tFra\
m\
e
(
)
)
{
lOl\
Ol\
lOl\
l\
ll\
O\

->
SetMovementD\
isabled
(
tr\
ue\

)
;
}
el\
se
{
lO\
l\
Ol\
lOllllO\

->
Se\
t\
MovementDis\
ab\
led
(
fa\
l\
s\
e
)
;
lOlOllOllllO
->
Se\
t\
T\
o\
M\
ov\
ing
(
)
;
lOlOllOllllO
->
SetFindVe\
l\
ocity\
Fr\
om\
NextFra\
me
(
tru\
e\

)
;
if\

(
lOl\
O\
llOllllO
->
IsI\
nMov\
in\
gL\
ist\

(
)
)
lOlO\
llO\
llllO
->
Set\
NextFrame
(
ll\
lO\
OOl\
O\
lOlO
)
;
}
}
vo\
id
Stat\
icObjec\
t\

::
Test\
LineForCol\
l\
ision
(
const
Vec\
3
&
lOOlOlOl\
l\
l
,
const\

Vec\
3
&
lOOOl\
O\
OO\
OO
,
fl\
oat\

lOOlOllO\
OO
,
Coll\
i\
s\
i\
on
&
llO\
llllO\
lOl
)
{
lO\
l\
OllOl\
l\
llO\

->
Tes\
tLineFor\
C\
oll\
isio\
n
(
lO\
O\
lO\
lO\
lll
,
lOOO\
l\
OOO\
OO\

,
lO\
OlOll\
O\
OO
,
ll\
Ol\
l\
llOlO\
l\

)
;
}
Sta\
tic\
O\
bject
*
TA\
C\
_CAL\
L
St\
ati\
cObje\
c\
t
::
Crea\
teNew
(
)
{
StaticObj\
ect
*
lOlOllOOlll
;
lOOOOO\
llOOO\

(
lOlO\
llO\
O\
lll
,
Stat\
icO\
bject\

)
;
retu\
rn\

lO\
lOllOOlll\

;
}
StaticOb\
jec\
t
::
StaticObj\
ec\
t
(
)
:
Physics\
Obje\
c\
t
(
)
{
lOlOll\
O\
l\
lllO\

=
0
;
}
Static\
Obj\
ect\

::
~
Static\
Ob\
ject
(
)
{
Fin\
alise
(
)
;
}
}
