//---------------------------------------------------------------------------------
// File Name: zpta004.cpp
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#include "CollisionObject.h"
#ifndef TA_ERROR_H
#include "../Common/Error.h"
#endif //
#ifndef llOllOOOlOl
#include "../Common/zcta004.h"
#endif //
#ifndef llOllOOOllO
#include "../Physics/zpta013.h"
#endif //
namesp\
ace
TA\

{
bool
Coll\
isi\
o\
nO\
bj\
ect
::
Initial\
ise\
From\
Fil\
e
(
co\
ns\
t
Char\

*
lllOOO\
lO\
Ol
)
{
if
(
!
Ser\
ia\
lisable
(
)
)
{
lOO\
OO\
O\
O\
llO\

(
0
,
"CollisionObject::InitialiseFromFile. This object type cannot be initialised from file.")
;
retur\
n
fal\
se
;
}
lOO\
O\
O\
OOOl\
lO
ll\
OllO\
OOl\
ll\

;
if\

(
ll\
O\
llO\
O\
Oll\
l
.
Initiali\
se
(
ll\
l\
OOOl\
O\
Ol
)
)
{
Seriali\
se\
r
lOOOl\
O\
llO\
l
;
lOOOlOl\
lO\
l
.
Init\
iali\
se
(
llO\
llOOOlll\

)
;
TA_ASSERT
(
llOl\
l\
OOl\
OOO
(
)
)
;
lll\
O\
l\
OOOOO\

llOll\
OO\
lOOl\

(
ll\
OllOO\
lO\
OO
(
)
,
llOllO\
OlO\
lO
)
;
Ve\
rs\
ion
lllOlOO\
OlO
=
llOll\
OO\
lOOl
.
Seria\
lise
(
lOOOlO\
ll\
Ol\

)
;
if\

(
lllOlOOOl\
O
>
llO\
llOOlOlO
)
{
lO\
OO\
OOOllO\

(
0
,
"CollisionObject::InitialiseFromFile. Version number is too new.")
;
return
fa\
lse
;
}
Ser\
ia\
lise
(
lOOO\
lOllOl\

,
lllO\
lO\
OOl\
O
)
;
}
el\
se
{
TA_ERRO\
R_REPORT_SE\
VERE
(
"CollisionObject::InitialiseFromFile failed.")
;
return
fa\
l\
se\

;
}
ret\
urn
tr\
ue
;
}
bool\

Co\
ll\
isionObject\

::
Sa\
veToF\
ile
(
const\

Char
*
ll\
lOOOlOOl
)
{
if
(
!
Serial\
i\
sable\

(
)
)
{
lOOOO\
O\
OllO
(
0
,
"CollisionObject::InitialiseFromFile. This object type cannot be saved.")
;
return
false\

;
}
llll\
llllll
llOl\
l\
OO\
lOll
;
if\

(
llO\
ll\
OOlO\
ll
.
Initiali\
s\
e
(
ll\
lOO\
Ol\
OO\
l
)
)
{
Seriali\
ser
lOO\
O\
l\
O\
llO\
l\

;
lOOOl\
OllOl
.
Initialise\

(
ll\
OllO\
OlOl\
l\

)
;
TA_A\
SSE\
RT
(
llO\
llO\
O\
lOOO
(
)
)
;
lllO\
l\
O\
OOO\
O
ll\
OllOO\
l\
OOl\

(
llOll\
OOl\
OO\
O
(
)
,
llOllO\
Ol\
OlO\

)
;
Versio\
n
ll\
lOlOOOlO
=
llOllOOlOOl\

.
Serialise
(
lOOOl\
OllO\
l
)
;
Seriali\
se
(
lOOOl\
Oll\
Ol
,
ll\
lOlOO\
OlO
)
;
}
el\
se
{
TA_ERR\
OR_\
R\
EPORT_SEVERE
(
"CollisionObjectCombo::Save failed")
;
return\

false
;
}
ret\
urn
tr\
u\
e
;
}
bool
Co\
llis\
io\
nObjec\
t\

::
In\
itia\
lis\
eF\
romF\
ile\
InMemory
(
void
*
llOllO\
OllOO\

,
in\
t\

ll\
OllOOllOl
)
{
if
(
!
Serialisable
(
)
)
{
lOOOOOOll\
O
(
0
,
"CollisionObject::InitialiseFromFile. This object type cannot be saved.")
;
return
false
;
}
if
(
!
llOl\
lO\
OllO\
O
)
{
lO\
O\
Olll\
OlO\

(
0
,
"CollisionObject::InitialiseFromFile. pFileData = 0.")
;
re\
turn
false
;
}
if
(
!
llOllOOl\
l\
O\
O
)
{
lOOOll\
lOlO\

(
0
,
"CollisionObject::InitialiseFromFile. nSizeInBytes = 0.")
;
ret\
ur\
n
fal\
se
;
}
lO\
OOOOOOlll
llOllOOO\
lll
;
llO\
llOO\
Olll
.
Ini\
tialise
(
llOll\
OOllO\
O
,
llOllOOl\
l\
O\
l
)
;
Seri\
a\
liser
lOO\
OlO\
llO\
l
;
lO\
OO\
l\
O\
llOl
.
Initia\
lise
(
llO\
llO\
O\
Olll\

)
;
TA_\
A\
SSERT\

(
llOllOOlO\
OO
(
)
)
;
lllOlO\
OOO\
O
llO\
llOOlO\
Ol\

(
llOllOOl\
OOO
(
)
,
ll\
O\
l\
lO\
Ol\
OlO
)
;
Version
lll\
O\
lO\
O\
Ol\
O\

=
llO\
l\
l\
O\
OlOOl\

.
Se\
ria\
lis\
e
(
lO\
OOlOllOl
)
;
if
(
lllOlOOOlO
>
llO\
llOOlOl\
O\

)
{
lOOO\
O\
OOl\
lO
(
0
,
"CollisionObject::InitialiseFromFile. Version number is too new.")
;
ret\
ur\
n
fa\
l\
se
;
}
Ser\
ialise
(
lOOOlO\
l\
lO\
l
,
lllOl\
OOOlO
)
;
if
(
llOllOOOlll
.
lOOO\
O\
OOllOO
(
)
)
{
lOOOOOO\
llO
(
0
,
"CollisionObject::InitialiseFromFile. Memory overflowed.")
;
return
fal\
s\
e
;
}
retur\
n
tr\
ue
;
}
bool\

Colli\
sio\
nObj\
ec\
t
::
Sav\
eToF\
ile\
InMemory
(
vo\
id
*
ll\
OllOO\
llOO
,
int
llO\
llOOllOl\

)
{
if\

(
!
Serial\
i\
s\
a\
ble
(
)
)
{
lOO\
O\
OOOll\
O
(
0
,
"CollisionObject::InitialiseFromFile. This object type cannot be saved.")
;
return
fal\
s\
e
;
}
if
(
!
ll\
OllOO\
l\
l\
O\
O\

)
{
lOOOll\
lOlO
(
0
,
"CollisionObject::InitialiseFromFile. pFileData = 0.")
;
ret\
ur\
n\

false\

;
}
if
(
!
ll\
Ol\
lOO\
llOO
)
{
lO\
OO\
lll\
OlO
(
0
,
"CollisionObject::InitialiseFromFile. nSizeInBytes = 0.")
;
ret\
urn
fa\
lse\

;
}
lO\
OOOOOOOll
ll\
OllOO\
l\
Oll
;
llOllOOl\
Oll
.
In\
i\
tial\
ise\

(
llOllOOllOO
,
llOl\
lOOllO\
l
)
;
Seri\
aliser
lOOOlOllOl
;
lOOOlO\
ll\
Ol
.
In\
it\
ial\
i\
s\
e
(
llO\
l\
lOOl\
O\
ll
)
;
TA\
_A\
SSERT
(
ll\
Ol\
lOOlOO\
O
(
)
)
;
lllOlOOO\
OO\

ll\
OllOO\
lOO\
l
(
llOllO\
O\
l\
OO\
O
(
)
,
llOll\
O\
OlO\
lO
)
;
Versi\
on
lll\
OlO\
OOlO
=
ll\
O\
ll\
O\
OlOOl
.
Ser\
i\
a\
li\
s\
e
(
lO\
OOl\
O\
llO\
l
)
;
Ser\
ial\
i\
se\

(
lO\
O\
OlO\
l\
lOl\

,
lllOlOOOlO
)
;
if
(
llOl\
lOOlOll
.
lOOOO\
OOll\
OO
(
)
)
{
lOO\
OO\
O\
Ol\
lO
(
0
,
"CollisionObject::InitialiseFromFile. Memory overflowed.")
;
return
fa\
lse\

;
}
retur\
n\

tr\
ue
;
}
int
Colli\
s\
i\
on\
Object
::
Cal\
cu\
lateFil\
eSiz\
e
(
)
{
if
(
!
Seri\
a\
lisa\
ble\

(
)
)
return
0
;
lOOOO\
OO\
lOOO
ll\
Ol\
l\
OO\
lOll
;
llOl\
l\
O\
Ol\
O\
ll\

.
Initi\
alise\

(
)
;
Seria\
liser\

lOO\
Ol\
OllOl\

;
lOOOlOll\
O\
l
.
Ini\
ti\
ali\
se
(
ll\
Ol\
lOOlOll
)
;
TA_AS\
SERT
(
llO\
llOOlOOO
(
)
)
;
ll\
lOlO\
OOO\
O\

llO\
ll\
OOlOO\
l
(
llOll\
OO\
lOOO
(
)
,
ll\
Ol\
lOO\
l\
Ol\
O
)
;
Versi\
on\

lll\
OlO\
OOlO
=
llOl\
l\
OOl\
OO\
l
.
Serialise
(
lOOOl\
Oll\
Ol
)
;
Serialis\
e\

(
lOOOlO\
ll\
Ol
,
lll\
Ol\
OO\
OlO\

)
;
retu\
r\
n
llOllO\
O\
lOll
.
lOOOl\
llOOl
(
)
;
}
}
