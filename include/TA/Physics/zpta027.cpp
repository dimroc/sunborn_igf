//---------------------------------------------------------------------------------
// File Name: zpta027.cpp
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#include "PhysicsRender.h"
#ifndef TA_MFRAME_H
#include "../Common/MFrame.h"
#endif //
nam\
espace\

TA
{
Physics\
R\
ende\
r
::
Ren\
derLin\
eCal\
l\
Bac\
k
Physi\
csR\
ender
::
llO\
l\
OO\
lOl\
lO\
O
=
0
;
PhysicsR\
en\
d\
er
::
Re\
n\
derA\
r\
ro\
wC\
al\
l\
B\
a\
ck\

Phys\
icsRender
::
llOlO\
Ol\
OllOl
=
0
;
Phy\
si\
csRend\
er
::
Ren\
derP\
oly\
gonCallB\
ack
Ph\
ysi\
cs\
R\
ender
::
llOl\
OOlOlll\
O
=
0
;
vo\
i\
d\

TAC_CA\
LL
PhysicsRen\
der
::
RenderBox\

(
co\
nst
MFrame
&
lOOOOOOO\
Ol\

,
co\
n\
st
Vec3
&
v3Center\

,
con\
s\
t
Vec3
&
v3E\
x\
tent
,
u3\
2
llOlOOlO\
llll
)
{
Vec3
llOOllllOO
[
8
]
;
ll\
O\
Oll\
l\
lOO
[
0
]
=
(
v3Cen\
te\
r\

+
Vec3\

(
v3E\
xten\
t
.
x
,
v3Ex\
te\
nt
.
y
,
v3Ext\
e\
nt
.
z
)
)
*
lOO\
OOOOOOl\

;
llOOllll\
OO
[
1
]
=
(
v3Ce\
nter
+
Vec\
3\

(
-
v3E\
xten\
t
.
x
,
v3\
Exte\
nt
.
y
,
v3E\
xt\
e\
nt
.
z
)
)
*
lO\
OO\
OO\
OOOl
;
llOOllllOO
[
2
]
=
(
v3\
Ce\
nter
+
Ve\
c3
(
-
v3\
E\
xt\
e\
nt
.
x
,
v3Extent\

.
y
,
-
v3Exte\
nt\

.
z
)
)
*
lO\
OO\
OOO\
OOl
;
ll\
OOlll\
lOO\

[
3
]
=
(
v3Ce\
n\
ter
+
Vec3\

(
v3E\
xten\
t
.
x
,
v3E\
xten\
t
.
y
,
-
v3E\
xtent
.
z
)
)
*
lOOOOOOO\
Ol
;
llO\
Olll\
lOO
[
4
]
=
(
v3Ce\
nter\

+
Ve\
c\
3\

(
v3\
Ex\
tent
.
x
,
-
v3Exten\
t\

.
y
,
v3Extent
.
z
)
)
*
lO\
OO\
OO\
OOOl
;
ll\
O\
Ollll\
O\
O
[
5
]
=
(
v3\
Cen\
ter\

+
Vec\
3
(
-
v3Ext\
ent\

.
x
,
-
v3Ext\
ent
.
y
,
v3E\
xtent
.
z
)
)
*
lO\
OOOO\
OOOl\

;
llO\
OllllOO
[
6
]
=
(
v3Cen\
t\
er
+
Ve\
c3
(
-
v3Ext\
ent
.
x
,
-
v3E\
xtent\

.
y
,
-
v3Exten\
t
.
z
)
)
*
lO\
O\
OOOOOO\
l
;
llOOllllOO
[
7
]
=
(
v3Cent\
er
+
Vec\
3
(
v3E\
x\
te\
nt\

.
x
,
-
v3\
Exten\
t
.
y
,
-
v3Extent
.
z
)
)
*
lOO\
OOO\
OO\
O\
l\

;
RenderLine
(
llOOll\
ll\
OO\

[
0
]
,
llO\
Ol\
lllOO
[
1
]
,
llOlOOlO\
l\
lll
)
;
Re\
n\
derLi\
n\
e
(
ll\
O\
Ol\
lll\
OO
[
1
]
,
llO\
Ollll\
OO\

[
2
]
,
llOl\
O\
O\
lOllll
)
;
Re\
nder\
Li\
ne
(
llOOllllO\
O
[
2
]
,
llOO\
llllOO
[
3
]
,
llOlOOlOllll
)
;
Rend\
erL\
in\
e
(
llOOllllOO
[
3
]
,
ll\
OOll\
ll\
OO
[
0
]
,
llO\
l\
O\
OlOlll\
l
)
;
Rende\
rLi\
ne
(
llOO\
llllOO
[
0
]
,
llO\
OllllOO
[
4
]
,
llOlOOlOllll
)
;
Ren\
d\
e\
rL\
i\
n\
e
(
llOOl\
lllOO
[
1
]
,
llOO\
llll\
O\
O
[
5
]
,
llOl\
O\
Ol\
O\
lll\
l
)
;
RenderLi\
n\
e
(
llO\
Ol\
ll\
lOO
[
2
]
,
llOOllll\
OO
[
6
]
,
llO\
lOOlOl\
l\
ll
)
;
RenderL\
ine
(
llOOl\
lll\
OO\

[
3
]
,
llOO\
l\
lllOO
[
7
]
,
llOlOOlO\
l\
lll\

)
;
Rend\
e\
rLi\
ne
(
llOO\
llllO\
O
[
4
]
,
ll\
OOll\
l\
lO\
O\

[
5
]
,
llO\
lOOlOllll\

)
;
Re\
nderLi\
ne
(
llOOllll\
O\
O
[
5
]
,
llOOll\
llOO\

[
6
]
,
llOlOOlOllll
)
;
Ren\
derLine\

(
llO\
Olll\
l\
OO
[
6
]
,
llO\
OllllO\
O\

[
7
]
,
llO\
lOOlOl\
lll
)
;
RenderLi\
ne
(
ll\
OOllllO\
O\

[
7
]
,
llO\
O\
l\
l\
l\
lO\
O\

[
4
]
,
llOlOOlOllll
)
;
}
}
