//---------------------------------------------------------------------------------
// File Name: zpta022.cpp
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#define TA_PHYSICS_INTERNAL
#define lOllOllOOOO
#ifndef TA_COMMON_H
#include "../Common/Common.h"
#endif //
#ifdef TA_MSVC
#ifndef TA_PHYSICS_H
#include "DynamicObject.h"
#endif //
#ifndef TA_PHYSICS_H
#include "Physics.h"
#endif //
#include <mm3dnow.h>
#include <xmmintrin.h>
#include <emmintrin.h>
#define lOlOlllllOOO lOlOlOlOOO lOlOlOlOOl
namespa\
c\
e
TA
{
ext\
ern
float
lO\
OlO\
ll\
l\
l\
lOO
;
extern
float
lOO\
lOll\
lllll
;
exter\
n
floa\
t\

lOlO\
l\
llllOOl
;
namespace
lOlO\
Ol\
OO\
OO\
lO\

{
lO\
l\
Olll\
llO\
O\
O
void
lOllOOOlOOlO\

(
Vec3
*
lOlOl\
OOlll\

lOO\
OlO\
O\
lOlO\

,
const
Vec3
*
lOlO\
lOO\
lll
lO\
OOl\
OOlOll
,
con\
s\
t
Mat3\
3
*
lOlOl\
O\
O\
l\
ll
lOOOlOO\
llO\
O\

)
{
ll\
lOO\
Oll\
ll
(
(
void
*
)
lOOO\
lOOlOlO
!=
(
void
*
)
lO\
OO\
lOOlO\
ll\

)
;
lllOO\
Ollll
(
(
voi\
d
*
)
lOOOlOOlOlO\

!=
(
void\

*
)
lOO\
Ol\
O\
Oll\
OO
)
;
lll\
O\
OOl\
lll
(
(
vo\
i\
d\

*
)
lO\
O\
OlOOlOll
!=
(
void
*
)
lOOOl\
O\
OllOO
)
;
__m128
lOOOlOOllOl
;
__m\
128
lOOOlOOll\
lO\

;
__\
m128
lOOOlOO\
llll\

;
__m1\
28
lOOOlOlO\
OO\
O
;
const
__\
m128
lOOO\
lOlOOO\
l
=
*
(
const\

__m128
*
lO\
lOlO\
Ol\
l\
l
)
lO\
OOlOOlO\
ll
;
con\
st\

__m1\
28
lOOOlOl\
O\
OlO
=
*
(
cons\
t
__\
m\
128\

*
)
&
lOOOlOOllO\
O
->
v3X\

;
con\
st
__m\
128
lOO\
O\
lOlO\
O\
ll
=
*
(
cons\
t
__\
m128
*
)
&
lOOO\
lOO\
llO\
O\

->
v3Y
;
con\
st
__m128
lOO\
O\
lO\
lOlOO
=
*
(
co\
nst
__m128
*
)
&
lOO\
OlO\
Ol\
l\
OO\

->
v3\
Z\

;
lOOOlOOllOl
=
(
__m\
12\
8\

&
)
_m\
m\
_\
shuf\
fle\
_e\
p\
i32
(
(
const
__m\
12\
8i
&
)
lOOOlOlOOOl
,
_MM_\
SHUFFLE
(
0
,
0
,
0
,
0
)
)
;
lO\
O\
O\
l\
O\
OlllO
=
(
__m128\

&
)
_mm_shuffle\
_epi32
(
(
const
__\
m\
128\
i
&
)
lOOOl\
OlO\
O\
Ol\

,
_MM\
_SH\
UFF\
LE
(
1
,
1
,
1
,
1
)
)
;
lOO\
O\
l\
OO\
lll\
l\

=
(
__m128
&
)
_mm_sh\
uffle_e\
pi3\
2
(
(
const\

__\
m128\
i
&
)
lO\
OOl\
O\
lOOOl
,
_M\
M_S\
HUF\
FLE\

(
2
,
2
,
2
,
2
)
)
;
lOOOl\
O\
lO\
OOO
=
_mm_m\
ul_ps
(
lOO\
Ol\
OOllO\
l
,
lOOO\
lOlOO\
lO
)
;
lO\
OOlOOlll\
O
=
_mm\
_\
mul_ps
(
lOOOl\
OO\
l\
llO
,
lOO\
Ol\
OlOOll
)
;
lO\
O\
OlOOllll
=
_mm\
_mu\
l\
_\
ps
(
lO\
O\
OlO\
Ol\
ll\
l\

,
lOOOlOlOlOO
)
;
lOOOl\
Ol\
OO\
OO\

=
_m\
m_a\
dd_\
ps
(
lOOO\
lOl\
OOOO
,
lOOOl\
OO\
l\
llO
)
;
lOO\
OlOlOOOO\

=
_mm_a\
dd_ps
(
lOOOl\
OlOOO\
O
,
lO\
OOlO\
Ollll\

)
;
*
(
__m128
*
)
lOO\
O\
l\
OO\
l\
OlO\

=
lOOOlOlO\
O\
OO\

;
}
lOlOllll\
lOO\
O
vo\
i\
d
lOlOOOlO\
llO\

(
Vec\
3
*
lOl\
Ol\
O\
Olll
lO\
OO\
lO\
OlO\
lO
,
const\

Ve\
c3
*
lOlO\
l\
OOll\
l
lOOOlOOl\
Ol\
l
,
const\

Vec3
*
lOl\
OlOOll\
l
lOll\
O\
O\
OlOOl\
l
)
{
lllO\
O\
Ollll
(
(
voi\
d
*
)
lOOOlOO\
l\
OlO
!=
(
voi\
d\

*
)
lO\
OO\
l\
OOlOll
)
;
ll\
lOOOllll
(
(
void
*
)
lO\
OO\
lOOlOlO\

!=
(
voi\
d
*
)
lOl\
lOOOlOOll\

)
;
lllOOOl\
l\
ll\

(
(
void\

*
)
lOOOlO\
OlOll
!=
(
vo\
id\

*
)
lOl\
lOOOlOOll
)
;
*
(
__m128
*
)
lOO\
O\
l\
OOl\
O\
lO\

=
_mm_sub\
_ps\

(
*
(
__m128
*
)
lOOOl\
OOlO\
ll\

,
*
(
__m128
*
)
lOllOOOl\
OOll\

)
;
}
lOlOllll\
lOOO
void
lOlOl\
OOOOl\

(
Vec3\

*
lOlOlO\
O\
lll\

lO\
OOlO\
OlO\
lO
,
cons\
t\

Ve\
c\
3
*
lOlO\
lO\
Olll\

lOOOl\
OO\
lOll\

,
const
Vec3
*
lO\
l\
O\
l\
OOlll
lOllOOO\
lOOll\

)
{
lllO\
O\
O\
lll\
l
(
(
vo\
id
*
)
lOOO\
l\
OOlOl\
O\

!=
(
vo\
id
*
)
lOOOlOOlO\
l\
l\

)
;
lllOOOllll\

(
(
void
*
)
lOOO\
l\
OOlOlO
!=
(
vo\
i\
d
*
)
lOllOOOlOO\
ll
)
;
lllO\
O\
Ollll\

(
(
void
*
)
lOO\
Ol\
OOlO\
ll
!=
(
void\

*
)
lOllOO\
O\
l\
OOll
)
;
*
(
__\
m12\
8
*
)
lO\
OO\
lOOlOl\
O
=
_m\
m_\
ad\
d_p\
s
(
*
(
__\
m\
128
*
)
lOOO\
lO\
OlO\
ll
,
*
(
__m128\

*
)
lOl\
l\
OOOl\
OOl\
l
)
;
}
lOl\
Olllll\
OO\
O
vo\
id
Cros\
s\

(
Vec\
3
*
lO\
l\
OlOOlll
lOO\
Ol\
OOl\
OlO
,
const\

Vec3
*
lOlO\
lOOll\
l
lOOOlOOl\
O\
ll
,
cons\
t
Vec\
3\

*
lO\
lOl\
O\
Olll
lOl\
l\
OOO\
lOOll
)
{
__m1\
28
lOlOOlOll\
OO
=
*
(
__m128
*
)
lOOOlO\
OlOll\

;
__\
m128
lO\
l\
O\
O\
l\
OllOl
=
*
(
__m128\

*
)
lOllO\
OOlO\
Oll
;
__m1\
28
lOlO\
O\
llO\
lOl
=
(
__m\
12\
8\

&
)
_mm_shu\
ff\
le_epi32
(
(
__m1\
28\
i
&
)
lOlO\
OlOl\
lOO
,
_MM_S\
HU\
FFLE\

(
3
,
0
,
2
,
1
)
)
;
__m128
lOl\
O\
OllOl\
lO
=
(
__m128
&
)
_mm_s\
huf\
f\
le_ep\
i3\
2
(
(
__m\
1\
28i\

&
)
lOl\
OOlOllOl
,
_MM_SHUFFLE
(
3
,
1
,
0
,
2
)
)
;
lO\
lOO\
llO\
ll\
O
=
_m\
m\
_mul_ps
(
lOlOOllO\
llO
,
lO\
lO\
Oll\
OlO\
l
)
;
__m\
1\
2\
8
lOlOOllOlll
=
(
__\
m\
12\
8
&
)
_mm\
_\
shu\
ffl\
e_epi3\
2
(
(
__\
m128i\

&
)
lOl\
OO\
llOlOl
,
_MM_SHUFFL\
E
(
3
,
0
,
2
,
1
)
)
;
__m1\
28
lOlOOl\
llOO\
O
=
(
__m12\
8
&
)
_m\
m_s\
huffle_epi\
32\

(
(
__m12\
8i\

&
)
lOlOOl\
O\
llOl
,
_MM_\
SHU\
FFLE
(
3
,
0
,
2
,
1
)
)
;
lOl\
OOl\
lOlll
=
_mm_mul_ps
(
lOlOOl\
lOlll
,
lOlOOlllOOO
)
;
lOl\
OOllOllO
=
_mm\
_su\
b_ps
(
lOlOO\
llOl\
lO\

,
lOlOOllOl\
ll
)
;
*
(
__m12\
8\

*
)
lOOOlOOl\
OlO
=
lOlOOllOll\
O\

;
}
lOlOll\
lllOOO
floa\
t\

Dot
(
cons\
t\

Vec3
*
lOlOlOOlll
lO\
OOlO\
OlOl\
l
,
cons\
t\

Vec3
*
lOlOlOO\
ll\
l
lOllO\
OOl\
OO\
l\
l
)
{
__m1\
2\
8
lllOOllOlO
=
*
(
__\
m\
128
*
)
lOOO\
l\
OO\
lO\
ll
;
__m12\
8\

lllOOllllO
=
*
(
__m128
*
)
lOllOOOlOOll
;
__m128
lO\
lOOlO\
llOO\

=
_mm_mul_\
ps
(
lllOO\
ll\
Ol\
O
,
lll\
OO\
ll\
llO
)
;
__\
m128
lOlOOlO\
ll\
O\
l
=
(
__m\
12\
8
&
)
_m\
m_shu\
ffl\
e_epi32
(
(
__m128i
&
)
lOl\
O\
OlOllOO
,
_MM_SHU\
FFL\
E
(
3
,
0
,
2
,
1
)
)
;
lOlOO\
lOllOl
=
_mm_ad\
d_ss
(
lOl\
O\
O\
lO\
llOl
,
lOlOO\
l\
OllOO
)
;
lOlOOlO\
llOO
=
(
__m1\
2\
8
&
)
_mm_\
shu\
ffle\
_epi32\

(
(
__m128i\

&
)
lOlOOlOl\
l\
O\
O\

,
_MM_SHUFFLE
(
3
,
1
,
0
,
2
)
)
;
lOl\
OO\
l\
Oll\
OO
=
_mm_\
a\
dd\
_s\
s
(
lO\
lOOl\
OllOO
,
lOl\
OOlOllOl
)
;
return
(
(
Ve\
c3
&
)
lO\
lOOl\
O\
ll\
OO
)
.
x
;
}
lOlO\
lllll\
OOO
fl\
oat
lOOlOlllOOlO
(
Vec3\

*
lOlOlOOlll
lOl\
Ol\
llllOlO
,
co\
n\
s\
t
Vec\
3
*
lOlOl\
OOl\
l\
l
lOlOl\
l\
ll\
lOll
,
co\
nst
Vec3
*
lOl\
OlOOlll\

lO\
lO\
l\
ll\
lllOO
,
con\
st
Vec\
3
*
lOlO\
lOOlll
lOlOl\
l\
llllOl\

,
co\
nst
Mat33\

*
lO\
l\
OlOOl\
l\
l
lO\
lOlll\
ll\
llO
,
con\
st
float\

lOl\
Ollllllll
)
{
Vec3
lO\
llOOO\
lOlOO
;
lOlOOOl\
OllO
(
&
lO\
l\
lOO\
O\
lOl\
OO
,
lOlO\
llllllOO\

,
lOlO\
ll\
ll\
l\
O\
ll
)
;
Vec3
lOll\
OO\
OlOlOl\

;
Cro\
ss\

(
&
lOl\
l\
O\
O\
OlOl\
Ol
,
lOl\
Ol\
ll\
lllOl
,
&
lOllOOOlO\
lOO\

)
;
Ve\
c3\

lO\
l\
lOOOl\
OllO
;
lOllOOOlOOl\
O
(
&
lOllOOO\
l\
Ol\
lO\

,
&
lO\
l\
lOO\
OlO\
lO\
l\

,
lOlOllll\
ll\
lO\

)
;
*
(
__m128
*
)
lOlO\
lllllO\
lO
=
*
(
__m1\
2\
8\

*
)
&
lOllOO\
OlOl\
lO\

;
Vec3
lOll\
O\
OOlOlll
;
Cr\
oss
(
&
lOll\
OO\
O\
lOlll
,
&
lO\
ll\
O\
OOlOlOO
,
&
lO\
ll\
OOOlOllO
)
;
float
lOl\
OlllllOl
=
Dot
(
lO\
lOlllll\
lOl
,
&
lO\
llOOO\
lOl\
ll
)
;
lOl\
Ol\
llll\
O\
l\

*=
lOOlO\
llll\
lOO
;
lOlOlllllOl
+=
lOlOlllll\
lll
;
retur\
n
lO\
lO\
ll\
lllO\
l
;
}
lO\
lOll\
lllO\
OO
void
lO\
O\
lOllllOOO
(
Vec3\

*
lOl\
OlO\
O\
lll
lO\
OOlOOl\
OlO
,
con\
st
Vec\
3\

*
lO\
lOlO\
O\
lll\

lOllOOOO\
OOOO
,
fl\
oat
lOl\
lOO\
OOOOOl
)
{
__m\
1\
28
lOllO\
OOl\
lOOO
;
__m128\

lOll\
OOOllO\
Ol\

;
lOllO\
O\
O\
llOOl
=
_mm_\
set1\
_p\
s
(
lOl\
lOOO\
O\
OO\
O\
l
)
;
lOl\
l\
OOOll\
OOO\

=
_mm_m\
u\
l_ps
(
*
(
__m1\
28\

*
)
lOllO\
OO\
OO\
OOO
,
lO\
llO\
O\
O\
llO\
O\
l
)
;
*
(
__m12\
8
*
)
lOOOl\
OOlO\
lO
=
_mm_add_\
ps
(
*
(
__m128\

*
)
lOOO\
lOOlOl\
O\

,
lOllOOOllOOO
)
;
}
lOlO\
lll\
llO\
O\
O
vo\
id\

lOO\
ll\
OOO\
O\
lOO\

(
Vec3
*
lOlOl\
O\
Ol\
ll
lO\
llO\
OOOOOl\
O
,
con\
st
Ve\
c\
3
*
lO\
lOlOOl\
ll
lOllOOO\
O\
OOll\

,
co\
n\
st
Vec3
*
lOl\
Ol\
O\
Olll
lOl\
lOOOO\
O\
lOO
,
co\
nst
Vec3
*
lOl\
O\
l\
OOl\
l\
l\

lO\
ll\
OOOOO\
lO\
l
,
cons\
t
Vec\
3
*
lOlOl\
OO\
ll\
l
lOllO\
OOOOll\
O\

,
cons\
t
Vec\
3
*
lOlOlOOll\
l
lOllO\
O\
OOO\
ll\
l
,
co\
nst\

Vec3\

*
lOl\
O\
lOOl\
ll
lOllO\
OOOlOOO\

,
con\
s\
t\

Vec\
3
*
lOlOlOOlll\

lOll\
O\
OOO\
l\
OO\
l\

)
{
__m128
lO\
l\
l\
OOOllOlO\

;
Vec\
3
lOOllOOO\
l\
O\
OO
;
Vec\
3\

lOOl\
lO\
O\
Ol\
O\
O\
l
;
Ve\
c\
3
lOllO\
O\
OO\
llOO
;
Vec3
lO\
llOOOOl\
l\
Ol
;
lOlO\
OO\
lOllO
(
&
lO\
OllO\
OOlO\
OO
,
lOllOOOO\
OO\
ll
,
lOl\
lOOOOOl\
lO
)
;
lOlOO\
O\
l\
Ol\
l\
O\

(
&
lOO\
ll\
OOOlOOl
,
lOllOO\
O\
OOOll
,
lO\
llO\
O\
OOlOOl
)
;
Cross
(
&
lOll\
O\
O\
O\
Oll\
OO\

,
lOllO\
OO\
OOl\
Ol\

,
&
lOO\
llO\
OOlOOO
)
;
Cr\
o\
ss
(
&
lOllOOOOllO\
l\

,
lOllOOOOl\
O\
O\
O
,
&
lOOl\
lO\
OOlOOl
)
;
lO\
llOO\
OllO\
lO
=
_mm_\
sub_ps
(
*
(
__\
m1\
28
*
)
lOllOOOOOl\
OO
,
*
(
__m12\
8\

*
)
lOl\
l\
O\
OOO\
O\
lll
)
;
__\
m\
12\
8\

lOllOOOl\
l\
Oll
=
_m\
m_\
su\
b_ps\

(
*
(
__m128\

*
)
&
lOl\
l\
OOO\
O\
ll\
OO
,
*
(
__\
m12\
8
*
)
&
lOllOO\
O\
OllO\
l
)
;
lOllOOOll\
OlO
=
_mm_ad\
d_\
ps\

(
lOl\
l\
OOOllOlO
,
lO\
llOOO\
llOll
)
;
*
(
__m1\
28
*
)
lOllOOO\
O\
OOlO\

=
lOl\
l\
O\
OOll\
O\
l\
O
;
}
#include "../Physics/zpta008.inl"
}
}
#endif //
