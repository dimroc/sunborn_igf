
//listing of all techniques and passes with embedded asm listings 

technique Technique0
{
    pass Pass0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float viewport_inv_height;
            //   float viewport_inv_width;
            //
            //
            // Registers:
            //
            //   Name                Reg   Size
            //   ------------------- ----- ----
            //   viewport_inv_width  c0       1
            //   viewport_inv_height c1       1
            //
            
                preshader
                add c0.x, c0.x, c0.x
                add c1.x, c1.x, c1.x
            
            // approximately 2 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
                vs_2_0
                def c2, 1, 0.5, 0, 0
                dcl_position v0
                add r0.x, v0.x, c2.x
                mov r0.y, c2.y
                mad oT0.x, r0.x, r0.y, c0.x
                add r0.x, -v0.y, c2.x
                mad oT0.y, r0.x, r0.y, c1.x
                mad oPos, v0.xyxx, c2.xxzz, c2.zzzx
            
            // approximately 6 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   sampler2D BlurSampler;
            //   sampler2D FullSampler;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   FullSampler  s0       1
            //   BlurSampler  s1       1
            //
            
                ps_2_0
                def c0, 0.333333343, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                dcl_2d s1
                texld r0, t0, s1
                texld r1, t0, s0
                add r2.w, r0.y, r0.x
                add r2.w, r0.z, r2.w
                add r3.w, r1.y, r1.x
                add r3.w, r1.z, r3.w
                mul r4.w, r3.w, c0.x
                mad r4.w, r2.w, c0.x, -r4.w
                mul r2.w, r2.w, c0.x
                add r4.w, r4.w, r4.w
                add r0, r0, -r1
                mad r0, r4.w, r0, r1
                mad r2.w, r3.w, c0.x, -r2.w
                cmp r0, r2.w, r1, r0
                mov oC0, r0
            
            // approximately 15 instruction slots used (2 texture, 13 arithmetic)
            };
    }
}

