
//listing of all techniques and passes with embedded asm listings 

technique Technique0
{
    pass Pass0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
                vs_2_0
                def c0, 1, 0.5, 0, 0
                dcl_position v0
                add r0.x, v0.x, c0.x
                mul oT0.x, r0.x, c0.y
                add r0.x, -v0.y, c0.x
                mul oT0.y, r0.x, c0.y
                mad oPos, v0.xyxx, c0.xxzz, c0.zzzx
            
            // approximately 5 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float2 BlurOffset;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   BlurOffset   c0       1
            //
            
                preshader
                add c8.xy, c0.xy, c0.xy
                mul c9.xy, (3, 3), c0.xy
                mul c10.xy, (4, 4), c0.xy
                mul c11.xy, (5, 5), c0.xy
                mul c12.xy, (6, 6), c0.xy
                mul c13.xy, (7, 7), c0.xy
            
            // approximately 6 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float2 BlurOffset;
            //   sampler2D BlurSampler;
            //   float PixelWeight[8];
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   PixelWeight  c0       8
            //   BlurOffset   c14      1
            //   BlurSampler  s0       1
            //
            
                ps_2_0
                def c15, 0.5, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, c0.x
                add r0, r0, r0
                add r1.xy, t0, c14
                add r2.xy, t0, -c14
                add r3.xy, t0, c8
                add r4.xy, t0, -c8
                add r5.xy, t0, c9
                add r6.xy, t0, -c9
                add r7.xy, t0, c10
                add r8.xy, t0, -c10
                add r9.xy, t0, c11
                add r10.xy, t0, -c11
                texld r1, r1, s0
                texld r2, r2, s0
                texld r3, r3, s0
                texld r4, r4, s0
                texld r5, r5, s0
                texld r6, r6, s0
                texld r7, r7, s0
                texld r8, r8, s0
                texld r9, r9, s0
                texld r10, r10, s0
                mad r0, r1, c1.x, r0
                mad r0, r2, c1.x, r0
                mad r0, r3, c2.x, r0
                mad r0, r4, c2.x, r0
                mad r0, r5, c3.x, r0
                mad r0, r6, c3.x, r0
                mad r0, r7, c4.x, r0
                mad r0, r8, c4.x, r0
                mad r0, r9, c5.x, r0
                mad r0, r10, c5.x, r0
                add r1.xy, t0, c12
                add r2.xy, t0, -c12
                add r3.xy, t0, c13
                add r4.xy, t0, -c13
                texld r1, r1, s0
                texld r2, r2, s0
                texld r3, r3, s0
                texld r4, r4, s0
                mad r0, r1, c6.x, r0
                mad r0, r2, c6.x, r0
                mad r0, r3, c7.x, r0
                mad r0, r4, c7.x, r0
                mul r0, r0, c15.x
                mov oC0, r0
            
            // approximately 47 instruction slots used (15 texture, 32 arithmetic)
            };
    }
}

