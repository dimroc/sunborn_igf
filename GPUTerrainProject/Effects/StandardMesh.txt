
//listing of all techniques and passes with embedded asm listings 

technique CelShade
{
    pass p0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float fAmbient;
            //   float2 fPixelOffset;
            //   float4x4 mShadowMatrix;
            //   float4x4 mViewProj;
            //   float4x4 mWorld;
            //   float3 vecCameraPos;
            //   float4 vecLightDir;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   mViewProj     c0       4
            //   mShadowMatrix c4       4
            //   mWorld        c8       3
            //   fPixelOffset  c11      1
            //   vecLightDir   c12      1
            //   fAmbient      c13      1
            //   vecCameraPos  c14      1
            //
            
                vs_2_0
                def c15, 1, 0, 0.5, 9.99999975e-005
                def c16, 1, -1, 0, 0
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                mad r0, v0.xyzx, c15.xxxy, c15.yyyx
                dp4 r1.x, r0, c8
                dp4 r1.y, r0, c9
                dp4 r1.z, r0, c10
                mov r1.w, c15.x
                dp4 oT4.z, r1, c6
                nrm r0.xyz, v1
                dp3 r0.w, r0, c12
                max r0.w, r0.w, c15.y
                min r0.w, r0.w, c15.x
                add r0.w, r0.w, c13.x
                add r0.w, r0.w, c15.w
                max r0.w, r0.w, c15.y
                min oT1.x, r0.w, c15.x
                add r2.xyz, -r1, c14
                nrm r3.xyz, r2
                dp3 r0.x, r0, r3
                max r0.x, r0.x, c15.y
                min oT2.x, r0.x, c15.x
                dp4 r0.x, r1, c0
                dp4 r0.y, r1, c1
                dp4 r0.z, r1, c2
                dp4 r0.w, r1, c3
                mov oPos, r0
                mov oT3, r0
                mov oT0.xy, v2
                dp4 r0.x, r1, c4
                dp4 r0.y, r1, c7
                dp4 r0.z, r1, c5
                rcp r0.w, r0.y
                mov oT4.w, r0.y
                mad r0.x, r0.x, r0.w, c11.x
                mad r0.y, r0.z, r0.w, -c11.y
                add r0.xy, r0, c15.x
                mul r0.xy, r0, c15.z
                mad oT4.xy, r0, c16, c16.zxzw
            
            // approximately 40 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float fFarPlane;
            //   float fShades;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   fFarPlane    c0       1
            //   fShades      c1       1
            //
            
                preshader
                rcp c0.x, c0.x
                rcp c1.x, c1.x
            
            // approximately 2 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   sampler2D ShadowMapSampler;
            //   sampler2D TextureSampler;
            //   float fMinShade;
            //   float2 fPixelOffset;
            //   float fShades;
            //   float fThreshold;
            //   float3 vEdgeColor;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   fPixelOffset     c2       1
            //   fShades          c3       1
            //   fMinShade        c4       1
            //   vEdgeColor       c5       1
            //   fThreshold       c6       1
            //   ShadowMapSampler s0       1
            //   TextureSampler   s1       1
            //
            
                ps_2_0
                def c7, 0, 1, 0.111111112, 0
                dcl t0.xy
                dcl t1.x
                dcl t2.x
                dcl t4.xyz
                dcl_2d s0
                dcl_2d s1
                add r0.z, t4.y, -c2.y
                mov r1.x, t4.x
                mov r1.y, r0.z
                add r0.y, t4.x, -c2.x
                mov r2.xy, r0.yzxw
                add r0.x, t4.x, c2.x
                mov r3.x, r0.x
                mov r3.y, r0.z
                mov r0.x, r0.y
                mov r0.y, t4.y
                mov r4.x, r3.x
                mov r4.y, t4.y
                add r0.z, t4.y, c2.y
                mov r5.x, r0.x
                mov r5.y, r0.z
                mov r6.x, t4.x
                mov r6.y, r0.z
                mov r7.y, r0.z
                mov r7.x, r4.x
                texld r1, r1, s0
                texld r2, r2, s0
                texld r3, r3, s0
                texld r0, r0, s0
                texld r8, t4, s0
                texld r4, r4, s0
                texld r5, r5, s0
                texld r6, r6, s0
                texld r7, r7, s0
                texld r9, t0, s1
                mad r0.w, t4.z, -c0.x, r1.x
                mad r1.w, t4.z, -c0.x, r2.x
                cmp r1.w, r1.w, c7.x, c7.y
                add r2.w, r1.w, c7.y
                cmp r0.w, r0.w, r1.w, r2.w
                mad r1.w, t4.z, -c0.x, r3.x
                add r2.w, r0.w, c7.y
                cmp r0.w, r1.w, r0.w, r2.w
                mad r1.w, t4.z, -c0.x, r0.x
                add r2.w, r0.w, c7.y
                cmp r0.w, r1.w, r0.w, r2.w
                mad r1.w, t4.z, -c0.x, r8.x
                add r2.w, r0.w, c7.y
                cmp r0.w, r1.w, r0.w, r2.w
                mad r1.w, t4.z, -c0.x, r4.x
                add r2.w, r0.w, c7.y
                cmp r0.w, r1.w, r0.w, r2.w
                mad r1.w, t4.z, -c0.x, r5.x
                add r2.w, r0.w, c7.y
                cmp r0.w, r1.w, r0.w, r2.w
                mad r1.w, t4.z, -c0.x, r6.x
                add r2.w, r0.w, c7.y
                cmp r0.w, r1.w, r0.w, r2.w
                mad r1.w, t4.z, -c0.x, r7.x
                add r2.w, r0.w, c7.y
                cmp r0.w, r1.w, r0.w, r2.w
                mad r0.w, r0.w, -c7.z, c7.y
                mul r0.w, r0.w, c3.x
                frc r1.w, r0.w
                add r0.w, r0.w, -r1.w
                mul r0.w, r0.w, t1.x
                max r1.w, c4.x, r0.w
                mul_sat r0.w, r1.w, c1.x
                mul r0.xyz, r9, r0.w
                add r1.w, -t2.x, c6.x
                mov r0.w, r9.w
                mov r9.xyz, c5
                cmp r0, r1.w, r9, r0
                mov oC0, r0
            
            // approximately 68 instruction slots used (10 texture, 58 arithmetic)
            };
    }
}

technique Shadow
{
    pass p0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float fAmbient;
            //   float2 fPixelOffset;
            //   float4x4 mShadowMatrix;
            //   float4x4 mViewProj;
            //   float4x4 mWorld;
            //   float3 vecCameraPos;
            //   float4 vecLightDir;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   mViewProj     c0       4
            //   mShadowMatrix c4       4
            //   mWorld        c8       3
            //   fPixelOffset  c11      1
            //   vecLightDir   c12      1
            //   fAmbient      c13      1
            //   vecCameraPos  c14      1
            //
            
                vs_2_0
                def c15, 1, 0, 0.5, 9.99999975e-005
                def c16, 1, -1, 0, 0
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                mad r0, v0.xyzx, c15.xxxy, c15.yyyx
                dp4 r1.x, r0, c8
                dp4 r1.y, r0, c9
                dp4 r1.z, r0, c10
                mov r1.w, c15.x
                dp4 oT4.z, r1, c6
                nrm r0.xyz, v1
                dp3 r0.w, r0, c12
                max r0.w, r0.w, c15.y
                min r0.w, r0.w, c15.x
                add r0.w, r0.w, c13.x
                add r0.w, r0.w, c15.w
                max r0.w, r0.w, c15.y
                min oT1.x, r0.w, c15.x
                add r2.xyz, -r1, c14
                nrm r3.xyz, r2
                dp3 r0.x, r0, r3
                max r0.x, r0.x, c15.y
                min oT2.x, r0.x, c15.x
                dp4 r0.x, r1, c0
                dp4 r0.y, r1, c1
                dp4 r0.z, r1, c2
                dp4 r0.w, r1, c3
                mov oPos, r0
                mov oT3, r0
                mov oT0.xy, v2
                dp4 r0.x, r1, c4
                dp4 r0.y, r1, c7
                dp4 r0.z, r1, c5
                rcp r0.w, r0.y
                mov oT4.w, r0.y
                mad r0.x, r0.x, r0.w, c11.x
                mad r0.y, r0.z, r0.w, -c11.y
                add r0.xy, r0, c15.x
                mul r0.xy, r0, c15.z
                mad oT4.xy, r0, c16, c16.zxzw
            
            // approximately 40 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float fFarPlane;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   fFarPlane    c0       1
            //
            
                preshader
                rcp c0.x, c0.x
            
            // approximately 1 instruction used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   sampler2D TextureSampler;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   TextureSampler s0       1
            //
            
                ps_2_0
                def c1, 1, 1, 1, 0
                dcl t0.xy
                dcl t3.xyz
                dcl_2d s0
                texld r0, t0, s0
                mul r1.xyz, t3.z, c0.x
                mov r1.w, c1.x
                cmp r0, -r0.w, c1, r1
                mov oC0, r0
            
            // approximately 5 instruction slots used (1 texture, 4 arithmetic)
            };
    }
}

