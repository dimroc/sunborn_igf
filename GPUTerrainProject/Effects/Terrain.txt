
//listing of all techniques and passes with embedded asm listings 

technique AmbientDif_MultiTex
{
    pass P0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float2 TWidthLength;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   TWidthLength c0       1
            //
            
                preshader
                rcp c14.x, c0.x
                rcp c15.x, c0.y
            
            // approximately 2 instructions used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float3 Aintensity;
            //   float3 Dintensity;
            //   float2 TWidthLength;
            //   float TextureScale;
            //   float2 Tween;
            //   float2 fPixelOffset;
            //   float4x4 mITWorld;
            //   float4x4 mShadowMatrix;
            //   float4x4 mViewProj;
            //   float4x4 mWorld;
            //   float4 vecLightDir;
            //
            //
            // Registers:
            //
            //   Name          Reg   Size
            //   ------------- ----- ----
            //   mViewProj     c0       4
            //   mShadowMatrix c4       4
            //   mWorld        c8       3
            //   mITWorld      c11      3
            //   fPixelOffset  c16      1
            //   vecLightDir   c17      1
            //   Aintensity    c18      1
            //   Dintensity    c19      1
            //   TWidthLength  c20      1
            //   Tween         c21      1
            //   TextureScale  c22      1
            //
            
                vs_2_0
                def c23, 1, 0, 0.5, -1
                dcl_position v0
                dcl_normal v1
                dcl_texcoord v2
                add r0.x, -v0.z, c20.y
                mul r0.y, r0.x, c15.x
                mul r0.x, v0.x, c14.x
                mul oT1.xy, r0, c22.x
                mov oT0.xy, r0
                mov r0.y, v0.y
                mad r0.x, v2.x, c21.x, r0.y
                mad r0.y, v2.y, c21.y, r0.x
                mad r0.xzw, v0.xyzx, c23.xyxy, c23.yyyx
                dp4 r1.x, r0, c8
                dp4 r1.y, r0, c9
                dp4 r1.z, r0, c10
                mov r1.w, c23.x
                dp4 oT3.z, r1, c6
                dp4 oPos.x, r1, c0
                dp4 oPos.y, r1, c1
                dp4 oPos.z, r1, c2
                dp4 oPos.w, r1, c3
                mul r0, v1.y, c12
                mad r0, c11, v1.x, r0
                mad r0, c13, v1.z, r0
                dp4 r2.x, r0, r0
                rsq r2.x, r2.x
                mul r0, r0, r2.x
                dp4 r0.x, -c17, r0
                max r0.x, r0.x, c23.y
                min r0.x, r0.x, c23.x
                mov r2.xyz, c19
                mad oT2.xyz, r0.x, r2, c18
                dp4 r0.x, r1, c4
                dp4 r0.y, r1, c7
                dp4 r0.z, r1, c5
                rcp r0.w, r0.y
                mov oT3.w, r0.y
                mad r0.x, r0.x, r0.w, c16.x
                mad r0.y, r0.z, r0.w, -c16.y
                add r0.xy, r0, c23.x
                mul r0.xy, r0, c23.z
                mad oT3.xy, r0, c23.xwzw, c23.yxzw
            
            // approximately 39 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float fFarPlane;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   fFarPlane    c0       1
            //
            
                preshader
                rcp c2.x, c0.x
            
            // approximately 1 instruction used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float3 Aintensity;
            //   sampler2D AlphaTextureSampler;
            //   sampler2D BlendMapSampler;
            //   sampler2D BlueTextureSampler;
            //   sampler2D GreenTextureSampler;
            //   sampler2D RedTextureSampler;
            //   sampler2D ShadowMapSampler;
            //   float2 fPixelOffset;
            //
            //
            // Registers:
            //
            //   Name                Reg   Size
            //   ------------------- ----- ----
            //   fPixelOffset        c0       1
            //   Aintensity          c1       1
            //   BlendMapSampler     s0       1
            //   RedTextureSampler   s1       1
            //   GreenTextureSampler s2       1
            //   BlueTextureSampler  s3       1
            //   AlphaTextureSampler s4       1
            //   ShadowMapSampler    s5       1
            //
            
                ps_2_0
                def c3, 0, 1, 0.111111112, 0
                dcl t0.xy
                dcl t1.xy
                dcl t2.xyz
                dcl t3.xyz
                dcl_2d s0
                dcl_2d s1
                dcl_2d s2
                dcl_2d s3
                dcl_2d s4
                dcl_2d s5
                mov r0.x, t3.x
                add r1.z, t3.y, -c0.y
                mov r0.y, r1.z
                add r1.y, t3.x, -c0.x
                mov r2.xy, r1.yzxw
                mov r3.x, r1.y
                add r1.x, t3.x, c0.x
                mov r1.y, r1.z
                mov r4.x, r1.x
                mov r3.y, t3.y
                mov r4.y, t3.y
                mov r5.x, r4.x
                add r3.z, t3.y, c0.y
                mov r6.x, r3.x
                mov r6.y, r3.z
                mov r7.y, r3.z
                mov r5.y, r3.z
                mov r7.x, t3.x
                texld r0, r0, s5
                texld r2, r2, s5
                texld r1, r1, s5
                texld r3, r3, s5
                texld r8, t3, s5
                texld r4, r4, s5
                texld r6, r6, s5
                texld r7, r7, s5
                texld r5, r5, s5
                texld r9, t1, s1
                texld r10, t1, s2
                mad r0.w, t3.z, -c2.x, r0.x
                mad r1.w, t3.z, -c2.x, r2.x
                cmp r1.w, r1.w, c3.x, c3.y
                add r2.w, r1.w, c3.y
                cmp r0.w, r0.w, r1.w, r2.w
                add r1.w, r0.w, c3.y
                mad r2.w, t3.z, -c2.x, r1.x
                cmp r0.w, r2.w, r0.w, r1.w
                add r1.w, r0.w, c3.y
                mad r2.w, t3.z, -c2.x, r3.x
                cmp r0.w, r2.w, r0.w, r1.w
                add r1.w, r0.w, c3.y
                mad r2.w, t3.z, -c2.x, r8.x
                cmp r0.w, r2.w, r0.w, r1.w
                add r1.w, r0.w, c3.y
                mad r2.w, t3.z, -c2.x, r4.x
                cmp r0.w, r2.w, r0.w, r1.w
                add r1.w, r0.w, c3.y
                mad r2.w, t3.z, -c2.x, r6.x
                cmp r0.w, r2.w, r0.w, r1.w
                add r1.w, r0.w, c3.y
                mad r2.w, t3.z, -c2.x, r7.x
                cmp r0.w, r2.w, r0.w, r1.w
                add r1.w, r0.w, c3.y
                mad r2.w, t3.z, -c2.x, r5.x
                cmp r0.w, r2.w, r0.w, r1.w
                mad r0.xyz, r0.w, -c3.z, t2
                max r1.xyz, r0, c1
                texld r0, t0, s0
                texld r2, t1, s3
                texld r3, t1, s4
                add r1.w, r0.y, r0.x
                add r1.w, r0.z, r1.w
                add r1.w, r0.w, r1.w
                rcp r1.w, r1.w
                mul r2.w, r0.y, r1.w
                mul r4.xyz, r10, r2.w
                mul r2.w, r0.x, r1.w
                mad r4.xyz, r9, r2.w, r4
                mul r2.w, r0.z, r1.w
                mul r0.w, r0.w, r1.w
                mad r0.xyz, r2, r2.w, r4
                mad r0.xyz, r3, r0.w, r0
                mul r0.xyz, r1, r0
                mov r0.w, c3.y
                mov oC0, r0
            
            // approximately 75 instruction slots used (14 texture, 61 arithmetic)
            };
    }
}

