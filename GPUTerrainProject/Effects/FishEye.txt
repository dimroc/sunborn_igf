
//listing of all techniques and passes with embedded asm listings 

technique Technique0
{
    pass Pass0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
                vs_2_0
                def c0, 1, 0.5, 0, 0
                dcl_position v0
                add r0.x, v0.x, c0.x
                mul oT0.x, r0.x, c0.y
                add r0.x, -v0.y, c0.x
                mul oT0.y, r0.x, c0.y
                mad oPos, v0.xyxx, c0.xxzz, c0.zzzx
            
            // approximately 5 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   sampler2D FishEyeSampler;
            //   float2 PixelOffset;
            //   float circRad;
            //   float curve;
            //   float halfTexHeight;
            //   float halfTexWidth;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   PixelOffset    c0       1
            //   halfTexWidth   c1       1
            //   halfTexHeight  c2       1
            //   circRad        c3       1
            //   curve          c4       1
            //   FishEyeSampler s0       1
            //
            
                ps_2_0
                def c5, 2, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                mul r0.w, t0.y, c2.x
                mov r1.w, c2.x
                mad r0.w, r0.w, c5.x, -r1.w
                mul r1.w, r0.w, r0.w
                mul r2.w, t0.x, c1.x
                mov r3.w, c1.x
                mad r2.w, r2.w, c5.x, -r3.w
                mad r1.w, r2.w, r2.w, r1.w
                rsq r1.w, r1.w
                rcp r1.w, r1.w
                rcp r3.w, r1.w
                add r1.w, r1.w, -c3.x
                pow r4.w, r1.w, c4.x
                add r4.w, r4.w, c3.x
                mul r3.w, r3.w, r4.w
                mad r2.w, r3.w, r2.w, c1.x
                mad r0.w, r3.w, r0.w, c2.x
                mul r0.x, r2.w, c0.x
                mul r0.y, r0.w, c0.y
                texld r0, r0, s0
                texld r2, t0, s0
                cmp r0, r1.w, r0, r2
                mov oC0, r0
            
            // approximately 25 instruction slots used (2 texture, 23 arithmetic)
            };
    }
}

