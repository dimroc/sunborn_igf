
//listing of all techniques and passes with embedded asm listings 

technique Shadow
{
    pass p0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float4x4 mViewProj;
            //   float4x4 mWorld;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   mViewProj    c0       4
            //   mWorld       c4       3
            //
            
                vs_2_0
                def c7, 1, 0, 0, 0
                dcl_position v0
                dcl_texcoord v1
                mad r0, v0.xyzx, c7.xxxy, c7.yyyx
                dp4 r1.x, r0, c4
                dp4 r1.y, r0, c5
                dp4 r1.z, r0, c6
                mov r1.w, c7.x
                dp4 r0.x, r1, c0
                dp4 r0.y, r1, c1
                dp4 r0.z, r1, c2
                dp4 r0.w, r1, c3
                mov oPos, r0
                mov oT1, r0
                mov oT0.xy, v1
            
            // approximately 12 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float fFarPlane;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   fFarPlane    c0       1
            //
            
                preshader
                rcp c0.x, c0.x
            
            // approximately 1 instruction used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   sampler2D TextureSampler;
            //
            //
            // Registers:
            //
            //   Name           Reg   Size
            //   -------------- ----- ----
            //   TextureSampler s0       1
            //
            
                ps_2_0
                def c1, 1, 1, 1, 0
                dcl t0.xy
                dcl t1.xyz
                dcl_2d s0
                texld r0, t0, s0
                mul r1.xyz, t1.z, c0.x
                mov r1.w, c1.x
                cmp r0, -r0.w, c1, r1
                mov oC0, r0
            
            // approximately 5 instruction slots used (1 texture, 4 arithmetic)
            };
    }
}

