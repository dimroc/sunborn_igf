
//listing of all techniques and passes with embedded asm listings 

technique Technique0
{
    pass Pass0
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
                vs_2_0
                def c0, 1, 0.5, 0, 0
                dcl_position v0
                add r0.x, v0.x, c0.x
                mul oT0.x, r0.x, c0.y
                add r0.x, -v0.y, c0.x
                mul oT0.y, r0.x, c0.y
                mad oPos, v0.xyxx, c0.xxzz, c0.zzzx
            
            // approximately 5 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float2 BlurOffset;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   BlurOffset   c0       1
            //
            
                preshader
                add c5.xy, c0.xy, c0.xy
            
            // approximately 1 instruction used
            //
            // Generated by Microsoft (R) D3DX9 Shader Compiler 
            //
            // Parameters:
            //
            //   float2 BlurOffset;
            //   sampler2D BlurSampler;
            //   float PixelWeight[4];
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   PixelWeight  c0       4
            //   BlurOffset   c4       1
            //   BlurSampler  s0       1
            //
            
                ps_2_0
                def c6, 2, 0.125, 0, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, c1.x
                add r1.xy, t0, c4
                add r2.xy, t0, -c4
                add r3.xy, t0, c5
                add r4.xy, t0, -c5
                texld r1, r1, s0
                texld r2, r2, s0
                texld r3, r3, s0
                texld r4, r4, s0
                mul r5, r1, c0.x
                mad r5, r2, c0.x, r5
                mad r0, r0, c6.x, r5
                mad r0, r1, c2.x, r0
                mad r0, r2, c2.x, r0
                mad r0, r3, c3.x, r0
                mad r0, r4, c3.x, r0
                mul r0, r0, c6.y
                mov oC0, r0
            
            // approximately 19 instruction slots used (5 texture, 14 arithmetic)
            };
    }
}

